### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  accessToken: String
  accessTokenExpires: DateTime
  refreshToken: String
  tokenId: String
  user: User
}

type ClientTicket {
  date: DateTime
  event: Event
  firstname: String
  id: Int!
  lastname: String
  nin: String
  status: Int
  user: User
}

type Contact {
  date: DateTime
  email: String
  fullname: String
  id: Int!
  message: String
  phone: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Event {
  address: String
  date: DateTime
  id: Int!
  name: String
}

type Mutation {
  createClientTicket(date: DateTime!, email: String!, eventId: Int!, firstname: String!, lastname: String!, nin: String!, phone: String!): String
  createInquire(email: String!, fullname: String!, message: String!, phone: String!): Boolean
  createUserTicket(date: DateTime!, eventId: Int!, firstname: String!, lastname: String!, nin: String!): ClientTicket
  signIn(email: String!, password: String!): AuthPayload
  updateProfile(birthday: DateTime!, city: Int!, firstname: String!, lastname: String!): AuthPayload
  verifyUser(email: String!): Boolean
}

type Query {
  findClientTicket(id: Int!): ClientTicket
  findManyClientTicket: [ClientTicket]
  findManyEvent: [Event]
  verifyUser(token: String!): Boolean
}

type User {
  birthday: DateTime
  city: Int
  email: String!
  firstname: String
  id: Int!
  lastname: String
}